}else{
hh_year_tmp <- hh_size_tract_2000 %>%
filter(Year == year) %>%
filter(hh_size > 0) %>%
filter(!is.na(GEOID)) %>%
filter(GEOID %in% tract_spatialdf@data$GEOID) %>%
group_by(GEOID, hh_size, tenure) %>%
summarise(estimate = sum(estimate),
SE = sum(SE)) %>%
ungroup() %>%
arrange(GEOID, hh_size, tenure) %>%
mutate(CoV = SE/estimate) %>%
mutate(Density = 0)
# No Info
hh_year_tmp$CoVOver1 <- ifelse(hh_year_tmp$CoV >= 1,
1, 0)
# less than 80% significance
hh_year_tmp$Density[hh_year_tmp$CoV < 1 &
hh_year_tmp$CoV >= 1/qnorm(.9)] <- 50
# between 80 and 90%
hh_year_tmp$Density[hh_year_tmp$CoV < 1/qnorm(.9) &
hh_year_tmp$CoV >= 1/qnorm(.95)] <- 25
hh_year_total <- hh_year_tmp %>%
group_by(GEOID) %>%
summarise(estimate = sum(estimate),
SE = sum(SE)) %>%
ungroup() %>%
mutate(CoV = SE/estimate)
}
if(year != 2010 &
year != 2000){
title_string <- paste0(year - 4,
"-", year)
legend_string <- "ACS"
}else{
title_string <- year
legend_string <- "Census"
}
### Household Size ####
hh_size_tract <- hh_tract %>%
filter(Year >= 2010) %>%
mutate(SE = moe/qnorm(.95),
CoV = SE/estimate)
hh_size_tract_2000 <- hh_tract %>%
filter(Year < 2010) %>%
mutate(SE = moe/qnorm(.95),
CoV = SE/estimate)
## Get appropriate census tract SpatialPolygonsDataFrame
if(year < 2010){
spatialdf <- data.frame(GEOID = kc_tracts_2000$GEOID)
row.names(spatialdf) <- names(kc_tracts_2000_poly)
tract_spatialdf <- SpatialPolygonsDataFrame(kc_tracts_2000_poly,
data = spatialdf)
}else{
spatialdf <- data.frame(GEOID = kc_tracts$GEOID)
row.names(spatialdf) <- names(kc_tracts_poly)
tract_spatialdf <- SpatialPolygonsDataFrame(kc_tracts_poly,
data = spatialdf)
}
if(year >= 2010){
hh_year_tmp <- hh_size_tract %>%
filter(Year == year) %>%
filter(hh_size > 0) %>%
filter(!is.na(GEOID)) %>%
filter(GEOID %in% tract_spatialdf@data$GEOID) %>%
group_by(GEOID, hh_size, tenure) %>%
summarise(estimate = sum(estimate),
SE = sum(SE)) %>%
ungroup() %>%
arrange(GEOID, hh_size, tenure) %>%
mutate(CoV = SE/estimate) %>%
mutate(Density = 0)
# No Info
hh_year_tmp$CoVOver1 <- ifelse(hh_year_tmp$CoV >= 1,
1, 0)
# less than 80% significance
hh_year_tmp$Density[hh_year_tmp$CoV < 1 &
hh_year_tmp$CoV >= 1/qnorm(.9)] <- 50
# between 80 and 90%
hh_year_tmp$Density[hh_year_tmp$CoV < 1/qnorm(.9) &
hh_year_tmp$CoV >= 1/qnorm(.95)] <- 25
hh_year_total <- hh_year_tmp %>%
group_by(GEOID) %>%
summarise(estimate = sum(estimate),
SE = sum(SE)) %>%
ungroup() %>%
mutate(CoV = SE/estimate)
}else{
hh_year_tmp <- hh_size_tract_2000 %>%
filter(Year == year) %>%
filter(hh_size > 0) %>%
filter(!is.na(GEOID)) %>%
filter(GEOID %in% tract_spatialdf@data$GEOID) %>%
group_by(GEOID, hh_size, tenure) %>%
summarise(estimate = sum(estimate),
SE = sum(SE)) %>%
ungroup() %>%
arrange(GEOID, hh_size, tenure) %>%
mutate(CoV = SE/estimate) %>%
mutate(Density = 0)
# No Info
hh_year_tmp$CoVOver1 <- ifelse(hh_year_tmp$CoV >= 1,
1, 0)
# less than 80% significance
hh_year_tmp$Density[hh_year_tmp$CoV < 1 &
hh_year_tmp$CoV >= 1/qnorm(.9)] <- 50
# between 80 and 90%
hh_year_tmp$Density[hh_year_tmp$CoV < 1/qnorm(.9) &
hh_year_tmp$CoV >= 1/qnorm(.95)] <- 25
hh_year_total <- hh_year_tmp %>%
group_by(GEOID) %>%
summarise(estimate = sum(estimate),
SE = sum(SE)) %>%
ungroup() %>%
mutate(CoV = SE/estimate)
}
if(year != 2010 &
year != 2000){
title_string <- paste0(year - 4,
"-", year)
legend_string <- "ACS"
}else{
title_string <- year
legend_string <- "Census"
}
breaks <- c(0, 50, 100,
250, 500, 750,
1000, 2000, 3000, 4500)
hh.pal <- brewer.pal(n = 9, name = "Blues")
for(size in unique(hh_year_tmp$hh_size)){
for(tenure.type in c("Renter", "Owner")){
hh_size_tmp <- hh_year_tmp %>%
filter(hh_size == size &
tenure == tenure.type)
tract_spatialdf@data$Est <-
tract_spatialdf@data$Density <- 0
if(nrow(hh_size_tmp) != 0){
poly_order.idx <- match(tract_spatialdf@data$GEOID,
hh_size_tmp$GEOID)
tract_spatialdf@data$Est[poly_order.idx] <-
hh_size_tmp$estimate
tract_spatialdf@data$Density[poly_order.idx] <-
hh_size_tmp$Density
hh.int.tract <- classIntervals(tract_spatialdf@data$Est,
style = "fixed",
fixedBreaks = breaks,
n = 9)
hh.col.tract <- findColours(hh.int.tract, hh.pal)
}else{
hh.int.tract$var <- rep(0, nrow(tract_spatialdf@data))
hh.col.tract <- findColours(hh.int.tract, hh.pal)
}
jpeg(paste0("../household_size/Tract/Population/",
"Households_Size",
size, "_",
tenure.type, "_",
year, ".jpeg"),
height = 480, width = 480)
{
par(lend = 1,
mar = c(0,0,2,0),
oma = c(1,1,1,1))
plot(tract_spatialdf,
col = hh.col.tract,
border = 'grey48', lwd = .25,
main = "")
legend('bottomleft',
title = 'Households',
title.adj = 0,
ncol = 2,
bty = 'n',
cex = 0.75,
border = FALSE,
fill = hh.pal,
legend = names(attr(hh.col.tract, 'table')))
title(paste0(tenure.type,
" Households of Size ", size, "\n",
""),
font.main = 2, outer = FALSE,
adj = 0, cex.main = 1)
title(paste0("\n",
title_string,
" (Estimated from ",
legend_string, ")"),
font.main = 1, outer = FALSE,
adj = 0, cex.main = 1)
}
dev.off()
### Add CoV ####
jpeg(paste0("../household_size/Tract/Population/",
"Households_Size",
size, "_",
tenure.type,
"_CoV_", year, ".jpeg"),
height = 480, width = 480)
{
par(lend = 1,
mar = c(0,0,2,0),
oma = c(1,1,1,1))
plot(tract_spatialdf,
col = hh.col.tract,
border = 'grey48', lwd = .25,
main = "")
hatch.idx <- which(tract_spatialdf@data$Density > 0)
for(poly in hatch.idx){
points <- tract_spatialdf@polygons[[poly]]@Polygons[[1]]@coords
polygon(points[,1], points[,2],
border = FALSE,
density = tract_spatialdf@data$Density[poly])
}
legend('bottomleft',
title = 'Households',
title.adj = 0,
ncol = 2,
bty = 'n',
cex = 0.75,
border = FALSE,
fill = hh.pal,
legend = names(attr(hh.col.tract, 'table')))
legend('bottomright',
title = 'Probability of\nSignificant Uncertainty',
title.adj = 0,
ncol = 1,
bty = 'n',
cex= 0.75,
border = 'black',
fill = 'black',
density = c(0,25,50),
legend = c("< 10%",
"10%-20%",
"> 20%"))
title(paste0(tenure.type,
" Households of Size ", size, "\n",
""),
font.main = 2, outer = FALSE,
adj = 0, cex.main = 1)
title(paste0("\n",
title_string,
" (Estimated from ",
legend_string, ")"),
font.main = 1, outer = FALSE,
adj = 0, cex.main = 1)
}
dev.off()
# End tenure loop
}
# End size loop
}
### Prevalence ####
prev.pal <- brewer.pal(n = 9, name = "YlGnBu")
hh_year_tmp <- hh_year_tmp %>%
left_join(hh_year_total,
by = c("GEOID" = "GEOID"),
suffix = c("", "_Total")) %>%
mutate(Prev = estimate/estimate_Total)
## Test to find good breaks
if(FALSE){
prev.int.tract <- classIntervals(hh_year_tmp$Prev,
style = 'jenks',
n = 9)
breaks <- prev.int.tract$brks
breaks
}
breaks <- c(0, .005, .01,
.05, .1, .2,
.25, .5, .75, .9)
for(size in unique(hh_year_tmp$hh_size)){
for(tenure.type in c("Renter", "Owner")){
hh_size_tmp <- hh_year_tmp %>%
filter(hh_size == size &
tenure == tenure.type)
tract_spatialdf@data$Density <-
tract_spatialdf@data$Prev <- 0
if(nrow(hh_size_tmp) != 0){
poly_order.idx <- match(tract_spatialdf@data$GEOID,
hh_size_tmp$GEOID)
tract_spatialdf@data$Prev[poly_order.idx] <-
hh_size_tmp$Prev
tract_spatialdf@data$Density[poly_order.idx] <-
hh_size_tmp$Density
prev.int.tract <- classIntervals(tract_spatialdf@data$Prev,
style = "fixed",
fixedBreaks = breaks,
n = 9)
prev.col.tract <- findColours(prev.int.tract, prev.pal)
}else{
prev.int.tract$var <- rep(0, nrow(tract_spatialdf@data))
prev.col.tract <- findColours(prev.int.tract, prev.pal)
}
jpeg(paste0("../household_size/Tract/Prevalence/",
"Households_Size",
size, "_",
tenure.type, "_Prevalence_", year, ".jpeg"),
height = 480, width = 480)
{
par(lend = 1,
mar = c(0,0,2,0),
oma = c(1,1,1,1))
plot(tract_spatialdf,
col = prev.col.tract,
border = 'grey48', lwd = .25,
main = "")
legend('bottomleft',
title = 'Prevalence',
title.adj = 0,
ncol = 2,
bty = 'n',
cex = 0.75,
border = FALSE,
fill = prev.pal,
legend = names(attr(prev.col.tract, 'table')))
title(paste0("Prevalence of ",
tenure.type,
" Households of Size ", size, "\n",
""),
font.main = 2, outer = FALSE,
adj = 0, cex.main = 1)
title(paste0("\n",
title_string,
" (Estimated from ", legend_string, ")"),
font.main = 1, outer = FALSE,
adj = 0, cex.main = 1)
}
dev.off()
### Add CoV ####
jpeg(paste0("../household_size/Tract/Prevalence/",
"Households_Size",
size, "_",
tenure.type,
"_Prevalence_CoV_", year, ".jpeg"),
height = 480, width = 480)
{
par(lend = 1,
mar = c(0,0,2,0),
oma = c(1,1,1,1))
plot(tract_spatialdf,
col = prev.col.tract,
border = 'grey48', lwd = .25,
main = "")
hatch.idx <- which(tract_spatialdf@data$Density > 0)
for(poly in hatch.idx){
points <- tract_spatialdf@polygons[[poly]]@Polygons[[1]]@coords
polygon(points[,1], points[,2],
border = FALSE,
density = tract_spatialdf@data$Density[poly])
}
legend('bottomleft',
title = 'Prevalence',
title.adj = 0,
ncol = 2,
bty = 'n',
cex = 0.75,
border = FALSE,
fill = prev.pal,
legend = names(attr(prev.col.tract, 'table')))
legend('bottomright',
title = 'Probability of\nSignificant Uncertainty',
title.adj = 0,
ncol = 1,
bty = 'n',
cex= 0.75,
border = 'black',
fill = 'black',
density = c(0,25,50),
legend = c("< 10%",
"10%-20%",
"> 20%"))
title(paste0("Prevalence of ",
tenure.type,
" Households of Size ", size, "\n",
""),
font.main = 2, outer = FALSE,
adj = 0, cex.main = 1)
title(paste0("\n",
title_string,
" (Estimated from ",
legend_string, ")"),
font.main = 1, outer = FALSE,
adj = 0, cex.main = 1)
}
dev.off()
# End tenure loop
}
# End size loop
}
breaks <- c(0, .0005, .001,
.0025, .005, .0075,
.01, .0125, .015, .2)
for(size in unique(hh_year_tmp$hh_size)){
for(tenure.type in c("Renter", "Owner")){
hh_size_tmp <- hh_year_tmp %>%
filter(hh_size == size &
tenure == tenure.type) %>%
mutate(Dist = estimate/sum(estimate))
hh_size_tmp$Dist %>% summary() %>% print()
tract_spatialdf@data$Density <-
tract_spatialdf@data$Dist <- 0
if(nrow(hh_size_tmp) != 0){
poly_order.idx <- match(tract_spatialdf@data$GEOID,
hh_size_tmp$GEOID)
tract_spatialdf@data$Dist[poly_order.idx] <-
hh_size_tmp$Dist
tract_spatialdf@data$Density[poly_order.idx] <-
hh_size_tmp$Density
prev.int.tract <- classIntervals(tract_spatialdf@data$Dist,
style = "fixed",
fixedBreaks = breaks,
n = 9)
prev.col.tract <- findColours(prev.int.tract, prev.pal)
}else{
prev.int.tract$var <- rep(0, nrow(tract_spatialdf@data))
prev.col.tract <- findColours(prev.int.tract, prev.pal)
}
jpeg(paste0("../household_size/Tract/Distribution/",
"Households_Size",
size, "_",
tenure.type, "_Distribution_", year, ".jpeg"),
height = 480, width = 480)
{
par(lend = 1,
mar = c(0,0,2,0),
oma = c(1,1,1,1))
plot(tract_spatialdf,
col = prev.col.tract,
border = 'grey48', lwd = .25,
main = "")
legend('bottomleft',
title = 'Distribution',
title.adj = 0,
ncol = 2,
bty = 'n',
cex = 0.75,
border = FALSE,
fill = prev.pal,
legend = names(attr(prev.col.tract, 'table')))
title(paste0("Distribution of ",
tenure.type,
" Households of Size ", size, "\n",
""),
font.main = 2, outer = FALSE,
adj = 0, cex.main = 1)
title(paste0("\n",
title_string, " (Estimated from ", legend_string, ")"),
font.main = 1, outer = FALSE,
adj = 0, cex.main = 1)
}
dev.off()
### Add CoV ####
jpeg(paste0("../household_size/Tract/Distribution/",
"Households_Size",
size, "_",
tenure.type,"_Distribution_CoV_", year, ".jpeg"),
height = 480, width = 480)
{
par(lend = 1,
mar = c(0,0,2,0),
oma = c(1,1,1,1))
plot(tract_spatialdf,
col = prev.col.tract,
border = 'grey48', lwd = .25,
main = "")
hatch.idx <- which(tract_spatialdf@data$Density > 0)
for(poly in hatch.idx){
points <- tract_spatialdf@polygons[[poly]]@Polygons[[1]]@coords
polygon(points[,1], points[,2],
border = FALSE,
density = tract_spatialdf@data$Density[poly])
}
legend('bottomleft',
title = 'Distribution',
title.adj = 0,
ncol = 2,
bty = 'n',
cex = 0.75,
border = FALSE,
fill = prev.pal,
legend = names(attr(prev.col.tract, 'table')))
legend('bottomright',
title = 'Probability of\nSignificant Uncertainty',
title.adj = 0,
ncol = 1,
bty = 'n',
cex= 0.75,
border = 'black',
fill = 'black',
density = c(0,25,50),
legend = c("< 10%",
"10%-20%",
"> 20%"))
title(paste0("Distribution of ",
tenure.type,
" Households of Size ", size, "\n",
""),
font.main = 2, outer = FALSE,
adj = 0, cex.main = 1)
title(paste0("\n",
title_string,
" (Estimated from ",
legend_string, ")"),
font.main = 1, outer = FALSE,
adj = 0, cex.main = 1)
}
dev.off()
# End tenure loop
}
# End size dist loop
}
50*20
1000*4
4000 - 15000
4000 - 1500
1500/4000
