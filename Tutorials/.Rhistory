state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(hhs.4 = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H013006" #hh5
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(hhs.5 = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H013007" #hh6
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(hhs.6 = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H013008" #hh7+
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(hhs.7 = value) %>%
dplyr::select(-variable)
)
years <- c(2005:2019)
acs1DF <- bind_rows(lapply(years, function(x){
get_acs(
"county",
variables = c("B01001_001"),
state = "WA",
county = "King",
survey = "acs1",
moe_level = 95,
year = x,
cache_table = TRUE) %>%
mutate(Year = x)})) %>%
rename(total_population = estimate,
total_population.moe = moe) %>%
dplyr::select(-c(variable))  %>%
# left_join(
#   bind_rows(lapply(years, function(x){
#     get_acs(
#       "county",
#       variables = c("B26101_214"
#       ),
#       state = "WA",
#       county = "King",
#       survey = "acs1",
#       moe_level = 95,
#       year = x,
#       cache_table = TRUE,
#       geometry = FALSE) %>%
#       mutate(Year = x)})) %>%
#     rename(household_population = estimate,
#            household_population.moe = moe) %>%
#     dplyr::select(-c(variable))
# ) %>%
left_join(
bind_rows(lapply(years, function(x){
get_acs(
"county",
variables = c("B25002_001"
),
state = "WA",
county = "King",
survey = "acs1",
moe_level = 95,
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(total_occ = estimate,
total_occ.moe = moe) %>%
dplyr::select(-c(variable))
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_acs(
"county",
variables = c("B25002_002"
),
state = "WA",
county = "King",
survey = "acs1",
moe_level = 95,
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(occ = estimate,
occ.moe = moe) %>%
dplyr::select(-c(variable))
)  %>%
left_join(
bind_rows(lapply(years, function(x){
get_acs(
"county",
variables = c("B25002_003"
),
state = "WA",
county = "King",
survey = "acs1",
moe_level = 95,
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(vac = estimate,
vac.moe = moe) %>%
dplyr::select(-c(variable))
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_acs(
"county",
variables = c("B25010_001" #hhs
),
state = "WA",
county = "King",
survey = "acs1",
moe_level = 95,
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(hhs = estimate,
hhs.moe = moe) %>%
dplyr::select(-c(variable))
)
hh_by_size_acs <- bind_rows(lapply(years, function(x){
get_acs(
"county",
table = c("B11016"
),
# summary_var = "B11016_01",
state = "WA",
county = "King",
survey = "acs1",
moe_level = 95,
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
mutate(hh_size = case_when(
variable == "B11016_001" ~ 0, # total
variable == "B11016_003" ~ 2,
variable == "B11016_004" ~ 3,
variable == "B11016_005" ~ 4,
variable == "B11016_006" ~ 5,
variable == "B11016_007" ~ 6,
variable == "B11016_008" ~ 7,
variable == "B11016_010" ~ 1,
variable == "B11016_011" ~ 2,
variable == "B11016_012" ~ 3,
variable == "B11016_013" ~ 4,
variable == "B11016_014" ~ 5,
variable == "B11016_015" ~ 6,
variable == "B11016_016" ~ 7,
),
hh_size = factor(hh_size)) %>%
dplyr::select(-variable) %>%
filter(!is.na(hh_size)) %>%
group_by(GEOID, Year, hh_size) %>%
summarize(
estimate = sum(estimate),
moe = moe_sum(moe,estimate)
)
library(plyr)
totDF <- acs1DF %>%
mutate(
source = "acs"
)  %>%
data.frame() %>%
rbind.fill(
censusDF %>%
mutate(
source = "census"
) %>%
data.frame()
)
saveRDS(totDF, file = paste0(out_dir, "kc_survey_data.RDS"))
########################################################
###
### Analysis of average hh size using ACS and census data
### Updated August 9, 2021
rm(list=ls())
###################
# -- Libraries -- #
###################
library(tidycensus)
library(sf)
library(spdep)
library(raster)
library(mapview)
library(data.table)
library(tidyverse)
library(lme4)
library(INLA)
library(ggplot2)
library(gridExtra)
# constants
main_dir <- "C:/Users/allorant/OneDrive - UW/Shared with Everyone/UW/4thYear/PHI2021/"
data_dir <- paste0(main_dir, "data/")
out_dir <- paste0(main_dir, "output/")
totDF <- readRDS(file = paste0(out_dir, "kc_survey_data.RDS"))
hh_by_size <- readRDS(file = paste0(out_dir, "kc_hh_by_size.RDS"))
# getting standard error, log-transforming outcome and getting its SE
# using the Delta Method
totDF <- totDF %>%
mutate(hhs.se = ifelse(!is.na(hhs.moe),hhs.moe/1.96,0),
log.hhs = log(hhs),
log.hhs.se = (1/hhs)*hhs.se,
prec = ifelse(log.hhs.se!=0,1/(log.hhs.se),0))
grid<-expand.grid(GEOID=unique(totDF$GEOID),Year=c(2000:2040))
All<-totDF%>%right_join(grid)
dim(All)
All$period.id<-as.numeric(as.factor(All$Year))
prior.iid = c(0.5,0.008)
mod <- inla(log.hhs ~ f(period.id, model = "ar1", param = prior.iid),
scale = prec,
data =All,
control.predictor = list(compute = TRUE, link = 1))
summary(mod)
All$mean<-exp(mod$summary.fitted.values$`mean`)
All$up<-exp(mod$summary.fitted.values$`0.975quant`)
All$low<-exp(mod$summary.fitted.values$`0.025quant`)
gg <- ggplot(All, aes(x = Year, y = mean)) +
geom_line(size = 1) +
# scale_y_continuous(breaks = c(0,20,40,60,80,100), expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(breaks = seq(2000,2030,5), limits = c(2000, 2030)) +
geom_ribbon(data = All,
aes(ymin=low, ymax=up), linetype=2, alpha=0.1) +
geom_point(data = All, aes(x=Year, y=hhs,  color = source))+
geom_segment(data = All,
aes(x=Year, y=hhs-hhs.moe, xend=Year, yend=hhs+hhs.moe,
color = source))+
# geom_rug(data=df) +
labs(x ='Year', y = 'Average household size',
title = "King County") +
theme_bw() +
scale_color_manual(values=c("#FFA500", "#800080")) +
guides(fill=FALSE) +
theme(text= element_text(family= "Serif"), panel.grid.major = element_blank(), panel.grid.minor  = element_blank(),
axis.line = element_line(colour = "black"), plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 16, face = "bold"),
axis.text.y = element_text(
size=14),
axis.text.x = element_text(size=14),
legend.position = c(.95, .75),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6), legend.title = element_blank())
print(gg)
All$mean
summary(mod)
totDF <- readRDS(file = paste0(out_dir, "kc_survey_data.RDS"))
hh_by_size <- readRDS(file = paste0(out_dir, "kc_hh_by_size.RDS"))
totDF <- totDF %>%
mutate(hhs.se = ifelse(!is.na(hhs.moe),hhs.moe/1.96,0),
log.hhs = log(hhs),
log.hhs.se = (1/hhs)*hhs.se,
prec = ifelse(log.hhs.se!=0,1/(log.hhs.se),0))
grid<-expand.grid(GEOID=unique(totDF$GEOID),Year=c(2000:2040))
All<-totDF%>%right_join(grid)
dim(All)
All$period.id<-as.numeric(as.factor(All$Year))
prior.iid = c(0.5,0.008)
mod <- inla(log.hhs ~ f(period.id, model = "ar1", param = prior.iid),
scale = prec,
data =All,
control.predictor = list(compute = TRUE, link = 1))
View(All)
totDF <- totDF %>%
mutate(hhs.se = ifelse(!is.na(hhs.moe),hhs.moe/1.96,0),
log.hhs = log(hhs),
log.hhs.se = (1/hhs)*hhs.se,
prec = ifelse(log.hhs.se!=0,1/(log.hhs.se),1))
grid<-expand.grid(GEOID=unique(totDF$GEOID),Year=c(2000:2040))
All<-totDF%>%right_join(grid)
dim(All)
All$period.id<-as.numeric(as.factor(All$Year))
prior.iid = c(0.5,0.008)
mod <- inla(log.hhs ~ f(period.id, model = "ar1", param = prior.iid),
scale = prec,
data =All,
control.predictor = list(compute = TRUE, link = 1))
summary(mod)
All$mean<-exp(mod$summary.fitted.values$`mean`)
All$up<-exp(mod$summary.fitted.values$`0.975quant`)
All$low<-exp(mod$summary.fitted.values$`0.025quant`)
gg <- ggplot(All, aes(x = Year, y = mean)) +
geom_line(size = 1) +
# scale_y_continuous(breaks = c(0,20,40,60,80,100), expand = c(0, 0), limits = c(0, 100)) +
scale_x_continuous(breaks = seq(2000,2030,5), limits = c(2000, 2030)) +
geom_ribbon(data = All,
aes(ymin=low, ymax=up), linetype=2, alpha=0.1) +
geom_point(data = All, aes(x=Year, y=hhs,  color = source))+
geom_segment(data = All,
aes(x=Year, y=hhs-hhs.moe, xend=Year, yend=hhs+hhs.moe,
color = source))+
# geom_rug(data=df) +
labs(x ='Year', y = 'Average household size',
title = "King County") +
theme_bw() +
scale_color_manual(values=c("#FFA500", "#800080")) +
guides(fill=FALSE) +
theme(text= element_text(family= "Serif"), panel.grid.major = element_blank(), panel.grid.minor  = element_blank(),
axis.line = element_line(colour = "black"), plot.title = element_text(hjust = 0.5, size = 14),
axis.title = element_text(size = 16, face = "bold"),
axis.text.y = element_text(
size=14),
axis.text.x = element_text(size=14),
legend.position = c(.95, .75),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6), legend.title = element_blank())
print(gg)
##########################
## Read in the ACS data ##
##########################
var_df <- load_variables(2019, "acs5", cache = TRUE)
View(var_df)
########################################################
###
### Analysis of average hh size using ACS and census data
### Updated August 9, 2021
rm(list=ls())
###################
# -- Libraries -- #
###################
library(tidycensus)
library(sf)
library(spdep)
library(raster)
library(mapview)
library(data.table)
library(tidyverse)
library(lme4)
library(INLA)
library(ggplot2)
library(gridExtra)
# constants
main_dir <- "C:/Users/allorant/OneDrive - UW/Shared with Everyone/UW/4thYear/PHI2021/"
data_dir <- paste0(main_dir, "data/")
out_dir <- paste0(main_dir, "output/")
totDF <- readRDS(file = paste0(out_dir, "kc_survey_data.RDS"))
hh_by_size <- readRDS(file = paste0(out_dir, "kc_hh_by_size.RDS"))
# getting standard error, log-transforming outcome and getting its SE
# using the Delta Method
totDF
########################################################
###
### Analysis of Census and ACS data
### Updated August 9, 2021
rm(list=ls())
###################
# -- Libraries -- #
###################
library(tidycensus)
library(sf)
library(spdep)
library(raster)
library(mapview)
library(data.table)
library(tidyverse)
library(lme4)
library(INLA)
library(ggplot2)
library(gridExtra)
# constants
main_dir <- "C:/Users/allorant/OneDrive - UW/Shared with Everyone/UW/4thYear/PHI2021/"
data_dir <- paste0(main_dir, "data/")
out_dir <- paste0(main_dir, "output/")
# set api key to access tidycensusdata
myKey <- "98068953d7f457e6b1166ff2218f263faefa119e"
census_api_key(myKey)
years <- c(2000,2010)
#############################
## Read in the Census data ##
#############################
censusDF <- bind_rows(lapply(years, function(x){
get_decennial(
geography = "county",
variables = c("P001001"# tot pop
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE) %>%
mutate(Year = x)})) %>%
rename(total_population = value) %>%
dplyr::select(-variable) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H001001" # hs
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(housing_units = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H010001" # hhp
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(household_population = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H003001"
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(total_occ = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H003002"
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(occ = value) %>%
dplyr::select(-variable)
)  %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H003003"
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(vac = value) %>%
dplyr::select(-variable)
) %>%
left_join(
bind_rows(lapply(years, function(x){
get_decennial(
"county",
variables = c("H012001" #hhs
),
state = "WA",
county = "King",
year = x,
cache_table = TRUE,
geometry = FALSE) %>%
mutate(Year = x)})) %>%
rename(hhs = value) %>%
dplyr::select(-variable)
)
